# https://success.docker.com/article/how-to-configure-traefik-as-a-layer-7-ingress-controller-for-kubernetes
# Based on version taken from https://github.com/clemenko/k8s_yaml/blob/master/traefik_ingress_controller.yml
# Modifications include static setting for the nodeport value in traefik-ingress-service and replicas
---
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-traefik
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-traefik
  namespace: ingress-traefik
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: ingress-traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutetcps
    verbs:
      - get
      - list
      - watch
### Fixes the TlsOptions bug
  - apiGroups:
      - traefik.containo.us
    resources:
      - tlsoptions
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-traefik
subjects:
- kind: ServiceAccount
  name: ingress-traefik
  namespace: ingress-traefik
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ingress-traefik
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: ingress-traefik
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        ports:
        - name: http
          containerPort: 80
        - name: admin
          containerPort: 8080
        args:
        - "--api=true"
        - "--api.dashboard=true"
        - "--providers.kubernetesingress"
        - "--entrypoints.web.address=:80"
        - "--api.insecure=true"
        - "--metrics.prometheus=true"
        - "--accesslog=true"
        - "--global.sendAnonymousUsage=false"
      nodeSelector:
        node-role: proxy
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: ingress-traefik
  annotations:
    prometheus.io.scrape: 'true'
    prometheus.io/port: '8080'
spec:
  selector:
    k8s-app: traefik-ingress-lb
  type: NodePort
#  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      nodePort: 34501
      name: web
    - protocol: TCP
      port: 8080
      nodePort: 33540
      name: admin

  